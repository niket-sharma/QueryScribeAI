version: '3.8'

services:
  queryscribe-api:
    build: .
    container_name: queryscribe-ai
    ports:
      - "8000:8000"
    environment:
      # LLM Configuration
      - LLM_PROVIDER=${LLM_PROVIDER:-google}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}

      # Model Configuration
      - GOOGLE_MODEL=${GOOGLE_MODEL:-gemini-pro}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4-turbo-preview}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL:-claude-3-sonnet-20240229}

      # Application Settings
      - LLM_TEMPERATURE=${LLM_TEMPERATURE:-0.0}
      - MAX_RETRIES=${MAX_RETRIES:-3}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-120}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}

      # Database (optional)
      - DATABASE_URL=${DATABASE_URL}

    volumes:
      - ./data:/app/data:ro

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: PostgreSQL database for SQL validation
  # Uncomment if you want to include a database
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: queryscribe-db
  #   environment:
  #     - POSTGRES_USER=queryscribe
  #     - POSTGRES_PASSWORD=changeme
  #     - POSTGRES_DB=queryscribe
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./data/sample_schema.sql:/docker-entrypoint-initdb.d/schema.sql
  #   restart: unless-stopped

# volumes:
#   postgres_data:
